# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 MASH project contributors
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Fail if required Vikunja settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`).
  when: "lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vikunja_uid
    - vikunja_gid
    - vikunja_hostname
    - vikunja_path_prefix
    - vikunja_container_network
    - vikunja_environment_variables_service_jwtsecret

- name: Fail if Vikunja database type is invalid
  ansible.builtin.fail:
    msg: >-
      vikunja_database_type must be 'mysql', 'postgres', or 'sqlite'.
  when: "vikunja_database_type not in ['mysql', 'postgres', 'sqlite']"

- name: Fail if required Vikunja + MySQL integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `vikunja_database_type` is `mysql`
  when: "vikunja_database_type == 'mysql' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vikunja_database_mysql_hostname
    - vikunja_database_mysql_password

- name: Fail if required Vikunja + Postgres integration settings not defined
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) when `vikunja_database_type` is `postgres`
  when: "vikunja_database_type == 'postgres' and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vikunja_database_postgres_hostname
    - vikunja_database_postgres_password

- name: Fail if SMTP settings are missing (and SMTP is enabled by setting host)
  ansible.builtin.fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`) to correctly set up email via SMTP.
  when: "vikunja_environment_variables_smtp_enabled | bool and lookup('vars', item, default='') | string | length == 0"
  with_items:
    - vikunja_environment_variables_smtp_host
    - vikunja_environment_variables_smtp_from

- name: Run if Traefik is enabled
  when: vikunja_container_labels_traefik_enabled | bool
  block:
    - name: Fail if Traefik settings required for Vikunja are not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "lookup('vars', item, default='') | string | length == 0"
      with_items:
        - vikunja_container_labels_traefik_hostname
        - vikunja_container_labels_traefik_path_prefix

    - name: Fail if vikunja_container_labels_traefik_path_prefix is different than /
      ansible.builtin.fail:
        msg: >-
          vikunja_container_labels_traefik_path_prefix (`{{ vikunja_container_labels_traefik_path_prefix }}`) must be `/`.
          Vikunja does not support hosting under a subpath yet.
      when: "vikunja_container_labels_traefik_path_prefix != '/'"

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `vikunja_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if vikunja_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          vikunja_container_labels_traefik_path_prefix (`{{ vikunja_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/vikunja`).
      when: "vikunja_container_labels_traefik_path_prefix != '/' and vikunja_container_labels_traefik_path_prefix[-1] == '/'"
